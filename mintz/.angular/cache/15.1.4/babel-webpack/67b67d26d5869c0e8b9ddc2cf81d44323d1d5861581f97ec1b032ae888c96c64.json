{"ast":null,"code":"import { from, switchMap } from 'rxjs';\nimport { PedidoProduto } from '../pedidos/pedido-produto.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PedidoService {\n  constructor(http) {\n    this.http = http;\n  }\n  // public inserir(pedido: Pedido){\n  //   this.http.post<String>(\"http://localhost:8081/api/pedido\", pedido).subscribe();\n  // }\n  // public inserir(pedido: Pedido, itensCarrinho: IProdutoCarrinho[]){\n  //   let pedido_id: number = 0;\n  //   //Insere o pedido\n  //   this.http.post<number>(\"http://localhost:8081/api/pedido2\", pedido).subscribe(\n  //     (resposta: number) => {\n  //       console.log(\"id pedido: \" + resposta);\n  //       pedido_id = resposta;\n  //       console.log(\"var pedido_id no subscribe: \" + pedido_id);\n  //     }\n  //   );\n  //   //Insere os produtos ao pedido\n  //   console.log(\"var pedido_id fora do subscribe: \" + pedido_id);\n  //   itensCarrinho.forEach(element => {\n  //     let pedidoProduto: PedidoProduto = new PedidoProduto();\n  //     pedidoProduto.pedido_id = pedido_id;\n  //     pedidoProduto.quant = element.quantidade;\n  //     pedidoProduto.produto_id = element.id;\n  //     pedidoProduto.preco = element.preco;\n  //     console.log(element.descricao);\n  //     console.log(pedidoProduto.pedido_id + \" quant: \" + pedidoProduto.quant + \" id_produto: \" + pedidoProduto.produto_id);\n  //     this.http.post<String>(\"http://localhost:8081/api/pedido-produto\", pedidoProduto).subscribe();\n  //   });\n  // }\n  inserir(pedido, itensCarrinho) {\n    let pedido_id = 0;\n    // Insere o pedido e, em seguida, insere os produtos\n    this.http.post(\"http://localhost:8081/api/pedido2\", pedido).pipe(switchMap(resposta => {\n      console.log(\"id pedido: \" + resposta);\n      pedido_id = resposta;\n      console.log(\"var pedido_id no switchMap: \" + pedido_id);\n      // Retorna um novo observable para a inserção dos produtos\n      return this.inserirProdutosAoPedido(itensCarrinho, pedido_id);\n    })).subscribe(() => {\n      console.log(\"Operação concluída com sucesso!\");\n    }, erro => {\n      console.error(\"Erro ao inserir pedido:\", erro);\n    });\n  }\n  inserirProdutosAoPedido(itensCarrinho, pedido_id) {\n    // Retorna um observable que insere os produtos\n    return from(itensCarrinho).pipe(switchMap(element => {\n      let pedidoProduto = new PedidoProduto();\n      pedidoProduto.pedido_id = pedido_id;\n      pedidoProduto.quant = element.quantidade;\n      pedidoProduto.produto_id = element.id;\n      pedidoProduto.preco = element.preco;\n      console.log(element.descricao);\n      console.log(\"Pedido: \", pedidoProduto.pedido_id + \" quant: \" + pedidoProduto.quant + \" id_produto: \" + pedidoProduto.produto_id);\n      // Retorna o observable para a inserção do produto\n      return this.http.post(\"http://localhost:8081/api/pedido-produto\", pedidoProduto);\n    }));\n  }\n  atualizar(pedido) {\n    this.http.put(\"http://localhost:8081/api/pedido\", pedido).subscribe();\n  }\n  consultar(id) {\n    return this.http.get(\"http://localhost:8081/api/pedido/\" + id);\n  }\n  //Lista todos os pedidos de um determinado cliente\n  listar(cliente_id) {\n    return this.http.get(\"http://localhost:8081/api/pedido/lista/\" + cliente_id);\n  }\n}\nPedidoService.ɵfac = function PedidoService_Factory(t) {\n  return new (t || PedidoService)(i0.ɵɵinject(i1.HttpClient));\n};\nPedidoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PedidoService,\n  factory: PedidoService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAAqBA,IAAI,EAAEC,SAAS,QAAQ,MAAM;AAElD,SAASC,aAAa,QAAQ,iCAAiC;;;AAK/D,OAAM,MAAOC,aAAa;EAExBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExC;EACA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA;EACA;EACA;EACA;EACA;EAEOC,OAAO,CAACC,MAAc,EAAEC,aAAiC;IAC9D,IAAIC,SAAS,GAAW,CAAC;IAEzB;IACA,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAS,mCAAmC,EAAEH,MAAM,CAAC,CAACI,IAAI,CACtEV,SAAS,CACNW,QAAgB,IAAI;MACnBC,OAAO,CAACC,GAAG,CAAC,aAAa,GAAGF,QAAQ,CAAC;MACrCH,SAAS,GAAGG,QAAQ;MACpBC,OAAO,CAACC,GAAG,CAAC,8BAA8B,GAAGL,SAAS,CAAC;MAEvD;MACA,OAAO,IAAI,CAACM,uBAAuB,CAACP,aAAa,EAAEC,SAAS,CAAC;IAC/D,CAAC,CACF,CACF,CAACO,SAAS,CACT,MAAK;MACHH,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAChD,CAAC,EACAG,IAAI,IAAI;MACPJ,OAAO,CAACK,KAAK,CAAC,yBAAyB,EAAED,IAAI,CAAC;IAChD,CAAC,CACF;EACH;EAEQF,uBAAuB,CAACP,aAAiC,EAAEC,SAAiB;IAClF;IACA,OAAOT,IAAI,CAACQ,aAAa,CAAC,CAACG,IAAI,CAC7BV,SAAS,CACNkB,OAAO,IAAI;MACV,IAAIC,aAAa,GAAkB,IAAIlB,aAAa,EAAE;MACtDkB,aAAa,CAACX,SAAS,GAAGA,SAAS;MACnCW,aAAa,CAACC,KAAK,GAAGF,OAAO,CAACG,UAAU;MACxCF,aAAa,CAACG,UAAU,GAAGJ,OAAO,CAACK,EAAE;MACrCJ,aAAa,CAACK,KAAK,GAAGN,OAAO,CAACM,KAAK;MAEnCZ,OAAO,CAACC,GAAG,CAACK,OAAO,CAACO,SAAS,CAAC;MAC9Bb,OAAO,CAACC,GAAG,CAAC,UAAU,eAAa,CAACL,SAAS,GAAG,UAAU,GAAGW,aAAa,CAACC,KAAK,GAAG,eAAe,GAAGD,aAAa,CAACG,UAAU,CAAC;MAE9H;MACA,OAAO,IAAI,CAAClB,IAAI,CAACK,IAAI,CAAS,0CAA0C,EAAEU,aAAa,CAAC;IAC1F,CAAC,CACF,CACF;EACH;EAEOO,SAAS,CAACpB,MAAc;IAC7B,IAAI,CAACF,IAAI,CAACuB,GAAG,CAAS,kCAAkC,EAAErB,MAAM,CAAC,CAACS,SAAS,EAAE;EAC/E;EAEOa,SAAS,CAACL,EAAU;IACzB,OAAO,IAAI,CAACnB,IAAI,CAACyB,GAAG,CAAS,mCAAmC,GAAGN,EAAE,CAAC;EACxE;EAEA;EACOO,MAAM,CAACC,UAAkB;IAC9B,OAAO,IAAI,CAAC3B,IAAI,CAACyB,GAAG,CAAW,yCAAyC,GAAGE,UAAU,CAAC;EACxF;;AA7FW7B,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAA8B,SAAb9B,aAAa;EAAA+B,YAFZ;AAAM","names":["from","switchMap","PedidoProduto","PedidoService","constructor","http","inserir","pedido","itensCarrinho","pedido_id","post","pipe","resposta","console","log","inserirProdutosAoPedido","subscribe","erro","error","element","pedidoProduto","quant","quantidade","produto_id","id","preco","descricao","atualizar","put","consultar","get","listar","cliente_id","factory","providedIn"],"sourceRoot":"","sources":["D:\\OneDrive - Fatec Centro Paula Souza\\Documentos\\Estudos\\Fatec_ADS\\4-Web\\pw-p2\\mintz\\src\\app\\services\\pedido.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Pedido } from '../pedidos/pedido.model';\r\nimport { Observable, from, switchMap } from 'rxjs';\r\nimport { IProdutoCarrinho } from '../produtos';\r\nimport { PedidoProduto } from '../pedidos/pedido-produto.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PedidoService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // public inserir(pedido: Pedido){\r\n  //   this.http.post<String>(\"http://localhost:8081/api/pedido\", pedido).subscribe();\r\n  // }\r\n  \r\n  // public inserir(pedido: Pedido, itensCarrinho: IProdutoCarrinho[]){\r\n  //   let pedido_id: number = 0;\r\n\r\n  //   //Insere o pedido\r\n  //   this.http.post<number>(\"http://localhost:8081/api/pedido2\", pedido).subscribe(\r\n  //     (resposta: number) => {\r\n  //       console.log(\"id pedido: \" + resposta);\r\n  //       pedido_id = resposta;\r\n  //       console.log(\"var pedido_id no subscribe: \" + pedido_id);\r\n  //     }\r\n  //   );\r\n\r\n  //   //Insere os produtos ao pedido\r\n  //   console.log(\"var pedido_id fora do subscribe: \" + pedido_id);\r\n  //   itensCarrinho.forEach(element => {\r\n  //     let pedidoProduto: PedidoProduto = new PedidoProduto();\r\n  //     pedidoProduto.pedido_id = pedido_id;\r\n  //     pedidoProduto.quant = element.quantidade;\r\n  //     pedidoProduto.produto_id = element.id;\r\n  //     pedidoProduto.preco = element.preco;\r\n\r\n      \r\n  //     console.log(element.descricao);\r\n  //     console.log(pedidoProduto.pedido_id + \" quant: \" + pedidoProduto.quant + \" id_produto: \" + pedidoProduto.produto_id);\r\n  //     this.http.post<String>(\"http://localhost:8081/api/pedido-produto\", pedidoProduto).subscribe();\r\n  //   });\r\n  // }\r\n\r\n  public inserir(pedido: Pedido, itensCarrinho: IProdutoCarrinho[]): void {\r\n    let pedido_id: number = 0;\r\n\r\n    // Insere o pedido e, em seguida, insere os produtos\r\n    this.http.post<number>(\"http://localhost:8081/api/pedido2\", pedido).pipe(\r\n      switchMap(\r\n        (resposta: number) => {\r\n          console.log(\"id pedido: \" + resposta);\r\n          pedido_id = resposta;\r\n          console.log(\"var pedido_id no switchMap: \" + pedido_id);\r\n\r\n          // Retorna um novo observable para a inserção dos produtos\r\n          return this.inserirProdutosAoPedido(itensCarrinho, pedido_id);\r\n        }\r\n      )\r\n    ).subscribe(\r\n      () => {\r\n        console.log(\"Operação concluída com sucesso!\");\r\n      },\r\n      (erro) => {\r\n        console.error(\"Erro ao inserir pedido:\", erro);\r\n      }\r\n    );\r\n  }\r\n\r\n  private inserirProdutosAoPedido(itensCarrinho: IProdutoCarrinho[], pedido_id: number): Observable<any> {\r\n    // Retorna um observable que insere os produtos\r\n    return from(itensCarrinho).pipe(\r\n      switchMap(\r\n        (element) => {\r\n          let pedidoProduto: PedidoProduto = new PedidoProduto();\r\n          pedidoProduto.pedido_id = pedido_id;\r\n          pedidoProduto.quant = element.quantidade;\r\n          pedidoProduto.produto_id = element.id;\r\n          pedidoProduto.preco = element.preco;\r\n\r\n          console.log(element.descricao);\r\n          console.log(\"Pedido: \"pedidoProduto.pedido_id + \" quant: \" + pedidoProduto.quant + \" id_produto: \" + pedidoProduto.produto_id);\r\n\r\n          // Retorna o observable para a inserção do produto\r\n          return this.http.post<String>(\"http://localhost:8081/api/pedido-produto\", pedidoProduto);\r\n        }\r\n      )\r\n    );\r\n  }\r\n  \r\n  public atualizar(pedido: Pedido){\r\n    this.http.put<String>(\"http://localhost:8081/api/pedido\", pedido).subscribe();\r\n  }\r\n\r\n  public consultar(id: number): Observable<Pedido>{\r\n    return this.http.get<Pedido>(\"http://localhost:8081/api/pedido/\" + id);\r\n  }\r\n\r\n  //Lista todos os pedidos de um determinado cliente\r\n  public listar(cliente_id: number): Observable<Pedido[]>{\r\n    return this.http.get<Pedido[]>(\"http://localhost:8081/api/pedido/lista/\" + cliente_id);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}